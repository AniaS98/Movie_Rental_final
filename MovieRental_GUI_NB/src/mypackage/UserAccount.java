/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mypackage;
import MovieRental_NetBeans.*;
import java.awt.Color;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import movierental_netbeans.AccountSystem;
import movierental_netbeans.AvailableMoviesList;
import movierental_netbeans.Client;
import movierental_netbeans.Movie;

/**
 *
 * @author katin
 */
public class UserAccount extends javax.swing.JFrame {

    DefaultListModel<Movie> mov;
    
    public AccountSystem system;
    DefaultListModel<Movie> rentedList; //wg C# - observableCollcetion
    AvailableMoviesList movies;
    DefaultListModel<Movie> moviesList;
    DefaultListModel<String> rl;
    Client client;
    Movie selectedMovie;
    
   
    /**
     * Creates new form UserAccount
     */
    public UserAccount() {
    initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        rentedMoviesList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rentalDateButton = new javax.swing.JButton();
        prolongButton = new javax.swing.JButton();
        returnButton = new javax.swing.JButton();
        rentButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        nameText = new javax.swing.JTextField();
        surnameText = new javax.swing.JTextField();
        rentDateText = new javax.swing.JTextField();
        returnDateText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        penaltyText = new javax.swing.JTextField();
        ReloadButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("List containing rented movies:");

        rentedMoviesList.setName(""); // NOI18N
        jScrollPane3.setViewportView(rentedMoviesList);

        jLabel2.setText("Rental date:");

        jLabel3.setText("Return date:");

        rentalDateButton.setText("Check the rental date");
        rentalDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentalDateButtonActionPerformed(evt);
            }
        });

        prolongButton.setText("Prolong");
        prolongButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prolongButtonActionPerformed(evt);
            }
        });

        returnButton.setText("Return a movie");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        rentButton.setText("Rent a movie");
        rentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentButtonActionPerformed(evt);
            }
        });

        logoutButton.setText("Log Out");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        nameText.setEditable(false);
        nameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextActionPerformed(evt);
            }
        });

        surnameText.setEditable(false);
        surnameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                surnameTextActionPerformed(evt);
            }
        });

        rentDateText.setEditable(false);
        rentDateText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentDateTextActionPerformed(evt);
            }
        });

        returnDateText.setEditable(false);

        jLabel4.setText("Penalty:");

        penaltyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                penaltyTextActionPerformed(evt);
            }
        });

        ReloadButton.setText("Reload");
        ReloadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReloadButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Name:");

        jLabel6.setText("Surname:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rentDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(returnDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rentalDateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(prolongButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(surnameText, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(returnButton, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(logoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(penaltyText)
                    .addComponent(ReloadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(569, Short.MAX_VALUE)
                    .addComponent(rentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(28, 28, 28)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(penaltyText, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(surnameText))
                        .addGap(9, 9, 9)))
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rentalDateButton)
                            .addComponent(rentDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ReloadButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(prolongButton)
                        .addComponent(returnDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(180, 180, 180)
                    .addComponent(rentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(182, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public UserAccount(AccountSystem system, Client c, AvailableMoviesList movies) {
        initComponents();
        this.system = system;
        this.client = c;
        nameText.setText(client.name);
        surnameText.setText(client.surname);
        penaltyText.setText("0 PLN");
        
        mov = new DefaultListModel<Movie>();
        
        // Tu sie cos zjebalo
        this.movies = movies;
        rl = new DefaultListModel<String>();
        this.rentedList = new DefaultListModel<Movie>();
        for (Movie m : client.rentalMoviesList) {
            rl.addElement(m.toString());
            
            rentedList.addElement(m);
            mov.addElement(m);
            System.out.println("Dziala wyswietlenie poczatkowe");
        }
        rentedMoviesList.setModel(rl);

        
        
        
    }
    
    private void rentalDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentalDateButtonActionPerformed
        int selected = rentedMoviesList.getAnchorSelectionIndex();
        if(selected != -1) {
           selectedMovie = rentedList.getElementAt(selected);

           //rentDateText.setText(selectedMovie.rentalDate.toString());
           
          SimpleDateFormat dFormat = new SimpleDateFormat("dd/MM/yyyy");
          String sDate = dFormat.format(selectedMovie.rentalDate.getTime());
          rentDateText.setText(sDate);

          //returnDateText.setText(selectedMovie.returnDate.toString());
          
          sDate = dFormat.format(selectedMovie.returnDate.getTime());
          returnDateText.setText(sDate);
          
           
        }
        else {
            JOptionPane.showMessageDialog(null, "Select a movie.", "Attention!", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
    }//GEN-LAST:event_rentalDateButtonActionPerformed

    private void prolongButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prolongButtonActionPerformed
        int selected = rentedMoviesList.getAnchorSelectionIndex();
        if(selected != -1) {
            movies.Prolong(rentedList.getElementAt(selected));
            
            
            if(rentedList.getElementAt(selected).returnDate.get(Calendar.YEAR) == rentedList.getElementAt(selected).rentalDate.get(Calendar.YEAR))
            {
                if(rentedList.getElementAt(selected).returnDate.get(Calendar.MONTH) - rentedList.getElementAt(selected).rentalDate.get(Calendar.MONTH) >= 4) {
                JOptionPane.showMessageDialog(null, "You cannot rent a movie for more than 4 months", "Attention!", JOptionPane.INFORMATION_MESSAGE);
                return;
                }
                else {
                //returnDateText.setText(rentedList.getElementAt(selected).returnDate.toString());
                
                SimpleDateFormat dFormat = new SimpleDateFormat("dd/MM/yyyy");
                String sDate = dFormat.format(selectedMovie.returnDate.getTime());
                returnDateText.setText(sDate);
                }
            }
            else
            {
                int dif = 12 -rentedList.getElementAt(selected).returnDate.get(Calendar.MONTH);
                if((dif+rentedList.getElementAt(selected).rentalDate.get(Calendar.MONTH)) >=4)
                {
                JOptionPane.showMessageDialog(null, "You cannot rent a movie for more than 4 months", "Attention!", JOptionPane.INFORMATION_MESSAGE);
                return;
                }
                else {
                //returnDateText.setText(rentedList.getElementAt(selected).returnDate.toString());
                
                SimpleDateFormat dFormat = new SimpleDateFormat("dd/MM/yyyy");
                String sDate = dFormat.format(selectedMovie.returnDate.getTime());
                returnDateText.setText(sDate);
                }
            }
            
        }
    }//GEN-LAST:event_prolongButtonActionPerformed

    private void nameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        try {
            AvailableMoviesList.SaveXML("AvailableMoviesList.xml", movies);
        } catch (IOException ex) {
            Logger.getLogger(UserAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
        //temporary arraylist to convert from defaultmodellist
        ArrayList<Movie> list = new ArrayList();
        for(int i = 0; i<rentedList.size(); i++) {
            list.add(rentedList.getElementAt(i));
        }
        system.EnterChanges(client, list);
        try {
            AccountSystem.SaveXML("AccountSystem.xml", system);
        } catch (IOException ex) {
            Logger.getLogger(UserAccount.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void rentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentButtonActionPerformed
        Rent frame = new Rent(client, movies);
        frame.pack();
        frame.setVisible(true);
        /*this.movies = frame.movies;
        this.client = frame.client;
        moviesList = new DefaultListModel<Movie>();
        for (Movie m : movies.MovieList) {
            moviesList.addElement(m);
        }
        /*rentedList = new DefaultListModel<Movie>();
        for (Movie m : client.rentalMoviesList) {
            rentedList.addElement(m);
        }
        //JList has to have DafultListModel<String>
        rl = new DefaultListModel<String>();
        for (Movie m:client.rentalMoviesList) {
            rl.addElement(m.toString());
        }*/
        
        //rentedMoviesList.setModel(rl);

        //this.movies = movies;
        rl = new DefaultListModel<String>();
        for (Movie m : client.rentalMoviesList) {
            rl.addElement(m.toString());
            
            System.out.println("Dziala wyswietlnie po zamowieniu");
        }
        rentedMoviesList.setModel(rl);
        
        
        
    }//GEN-LAST:event_rentButtonActionPerformed

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        int selected = rentedMoviesList.getAnchorSelectionIndex();
        if(selected != -1) {
            Movie m = mov.elementAt(selected);
            //movies.ReturnMovie(client, rentedList.getElementAt(selected));
            movies.ReturnMovie(client, m);
            rentedList.removeElementAt(selected);
            mov.remove(selected);
        }
        else {
            JOptionPane.showMessageDialog(null, "Select the movie that you want to return.", "Attention!", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
    }//GEN-LAST:event_returnButtonActionPerformed

    private void penaltyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_penaltyTextActionPerformed
        double penalty = system.PenaltyCharging(client);
        if(penalty > 0) {
            penaltyText.setText(Double.toString(penalty)+"PLN");
            penaltyText.setForeground(Color.red);
        }
        else {
            penaltyText.setText("0 PLN");
        }
    }//GEN-LAST:event_penaltyTextActionPerformed

    private void ReloadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReloadButtonActionPerformed
        
        rl = new DefaultListModel<String>();
        this.rentedList = new DefaultListModel<Movie>();
        for (Movie m : client.rentalMoviesList) {
            rl.addElement(m.toString());
            
            rentedList.addElement(m);
            mov.addElement(m);
            System.out.println("Dziala wpo reload");
        }
        rentedMoviesList.setModel(rl);
        
        
    }//GEN-LAST:event_ReloadButtonActionPerformed

    private void rentDateTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentDateTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rentDateTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ReloadButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton logoutButton;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField penaltyText;
    private javax.swing.JButton prolongButton;
    private javax.swing.JButton rentButton;
    private javax.swing.JTextField rentDateText;
    private javax.swing.JButton rentalDateButton;
    private javax.swing.JList<String> rentedMoviesList;
    private javax.swing.JButton returnButton;
    private javax.swing.JTextField returnDateText;
    private javax.swing.JTextField surnameText;
    // End of variables declaration//GEN-END:variables
}
